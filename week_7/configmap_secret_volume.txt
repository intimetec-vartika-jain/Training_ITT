Create config maps, secrets, and volumes and assign them to already created pods.

-new-pod.yml

apiVersion: v1
kind: Pod
metadata:
  name: my-pod
spec:
  containers:
    - name: my-container
      image: nginx
      ports:
        - containerPort: 80

-command to apply 
kubectl apply -f new-pod.yml

-create configmap 

apiVersion: v1
kind: ConfigMap
metadata:
  name: my-configmap
data:
  key1: value1
  key2: value2

-command to apply
kubectl apply -f configmap.yml

-create secret 

apiVersion: v1
kind: Secret
metadata:
  name: my-secret
type: Opaque
data:
  username: username
  password: password

-command to apply
kubectl apply -f secret.yml

-Update the pod with ConfigMap, Secret, and Volumes

apiVersion: v1
kind: Pod
metadata:
  name: my-pod
spec:
  containers:
    - name: my-container
      image: nginx
      ports:
        - containerPort: 80
      volumeMounts:
        - name: config-volume
          mountPath: /etc/config
        - name: secret-volume
          mountPath: /etc/secret
  volumes:
    - name: config-volume
      configMap:
        name: my-configmap
    - name: secret-volume
      secret:
        secretName: my-secret

-command to apply
kubectl apply -f new-pod.yaml


-To verify the the Secret, ConfigMap, and volumes are correctly associated with the pod 

kubectl describe pod

 output: 
   Mounts:
      /etc/config from config-volume (rw)
      /etc/secret from secret-volume (rw)

 Volumes:
  config-volume:
    Type:      ConfigMap (a volume populated by a ConfigMap)
    Name:      my-configmap
    Optional:  false
  secret-volume:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  my-secret
    Optional:    false


